public class Solution {
    public bool IsValidSudoku(char[,] board) {
        Dictionary<char, int>[] dics = new Dictionary<char, int>[27];
        for(int i=0;i<dics.Length;i++){
            dics[i]=new Dictionary<char,int>();
        }
        char[,][] arrs= new char[3, 3][];
        for(int i = 0; i < 9; i++)
        {
            for(int j = 0; j < 9; j++)
            {
                if (board[i, j] != '.')
                {
                    if (dics[i].ContainsKey(board[i, j]))
                    {
                        return false;
                    }
                    if (dics[j + 9].ContainsKey(board[i, j]))
                    {
                        return false;
                    }
                    if (dics[18 + 3 * (i / 3) + j / 3].ContainsKey(board[i, j]))
                    {
                        return false;
                    }
                    dics[18 + 3 * (i / 3) + j / 3].Add(board[i, j], 1);
                    dics[i].Add(board[i, j], 1);
                    dics[j + 9].Add(board[i, j], 1);
                }
                
                
            }
        }
        


        return true;
    }
}
